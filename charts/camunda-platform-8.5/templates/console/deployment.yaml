{{- if .Values.console.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "console.fullname" . }}
  labels:
    {{- include "console.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.global.annotations | nindent 4 }}
spec:
  strategy:
    type: RollingUpdate
  replicas: {{ .Values.console.replicas }}
  selector:
    matchLabels:
      {{- include "console.matchLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/console/configmap.yaml") . | sha256sum }}
      {{- with .Values.console.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "console.matchLabels" . | nindent 8 }}
        {{- if .Values.console.podLabels }}
          {{- toYaml .Values.console.podLabels | nindent 8 }}
        {{- end }}
    spec:
      imagePullSecrets:
        {{- include "console.imagePullSecrets" . | nindent 8 }}
      initContainers:
        {{- tpl (.Values.console.initContainers | default list | toYaml | nindent 8) $ }}
      serviceAccountName: {{ include "console.serviceAccountName" . }}
      {{- if .Values.console.dnsConfig }}
      dnsConfig: {{- toYaml .Values.console.dnsConfig | nindent 8 }}
      {{- end }}
      {{- if .Values.console.dnsPolicy }}
      dnsPolicy: {{ .Values.console.dnsPolicy | quote }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.console.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ include "camundaPlatform.imageByParams" (dict "base" .Values.global "overlay" .Values.console) }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          {{- if .Values.console.containerSecurityContext }}
          securityContext:
            {{- toYaml .Values.console.containerSecurityContext | nindent 12 }}
          {{- end }}
          env:
            - name: NODE_ENV
              value: prod
            - name: KEYCLOAK_INTERNAL_BASE_URL
              value: {{ mustRegexReplaceAllLiteral "/realms/.+" (include "camundaPlatform.authIssuerBackendUrl" .) "" | quote }}
            - name: KEYCLOAK_BASE_URL
              value: {{ mustRegexReplaceAllLiteral "/realms/.+" (include "camundaPlatform.authIssuerUrl" .) "" | quote }}
            - name: KEYCLOAK_REALM
              value: {{ .Values.console.keycloak.realm | quote }}
            - name: CAMUNDA_IDENTITY_AUDIENCE
              value: console-api
            - name: CAMUNDA_IDENTITY_CLIENT_ID
              value: console
            - name: CAMUNDA_CONSOLE_CONTEXT_PATH
              value: {{ .Values.console.contextPath | quote }}
          {{- if .Values.console.env}}
            {{ .Values.console.env | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.console.envFrom }}
          envFrom:
            {{- .Values.console.envFrom | toYaml | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: management
              containerPort: 9100
              protocol: TCP
          {{- if .Values.console.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.console.startupProbe.probePath }}
              scheme: {{ .Values.console.startupProbe.scheme }}
              port: management
            initialDelaySeconds: {{ .Values.console.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.console.startupProbe.periodSeconds }}
            successThreshold: {{ .Values.console.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.console.startupProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.console.startupProbe.timeoutSeconds }}
          {{- end }}
          {{- if .Values.console.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.console.readinessProbe.probePath }}
              scheme: {{ .Values.console.readinessProbe.scheme }}
              port: management
            initialDelaySeconds: {{ .Values.console.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.console.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.console.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.console.readinessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.console.readinessProbe.timeoutSeconds }}
          {{- end }}
          {{- if .Values.console.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.console.livenessProbe.probePath }}
              scheme: {{ .Values.console.livenessProbe.scheme }}
              port: management
            initialDelaySeconds: {{ .Values.console.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.console.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.console.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.console.livenessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.console.livenessProbe.timeoutSeconds }}
          {{- end }}
          {{- if .Values.console.command}}
          command: {{ toYaml .Values.console.command | nindent 10 }}
          {{- end }}
          resources:
            {{- toYaml .Values.console.resources | nindent 12 }}
          volumeMounts:
            - name: console-configuration
              mountPath: /var/run/config
          {{- if .Values.console.extraVolumeMounts }}
            {{- .Values.console.extraVolumeMounts | toYaml | nindent 12 }}
          {{- end }}
      {{- if .Values.console.sidecars }}
        {{- .Values.console.sidecars | toYaml | nindent 8 }}
      {{- end }}
      volumes:
        - name: console-configuration
          configMap:
            name: {{ include "console.fullname" . }}-configuration
      {{- if .Values.console.extraVolumes }}
        {{- .Values.console.extraVolumes | toYaml | nindent 8 }}
      {{- end }}
      {{- with .Values.console.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.console.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.console.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
